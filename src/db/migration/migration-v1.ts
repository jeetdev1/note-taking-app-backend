import dotenv from "dotenv";
import { pool } from "..";
dotenv.config({ path: ".env" });

async function migrate() {
  const client = await pool.connect();
  try {
    await client.query(`BEGIN`);
    const queryUser = `CREATE TABLE IF NOT EXISTS users (
      id INT GENERATED BY DEFAULT AS IDENTITY,
      first_name VARCHAR(100) NOT NULL,
      last_name VARCHAR(100) NOT NULL,
      email TEXT UNIQUE NOT NULL,
      password TEXT NOT NULL,
      created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
      updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
      PRIMARY KEY(id)
    )`;

    const queryNotebooks = `CREATE TABLE IF NOT EXISTS notebooks (
      id INT GENERATED BY DEFAULT AS IDENTITY,
      title VARCHAR(100) NOT NULL,
      body TEXT NOT NULL,
      isBook BOOLEAN DEFAULT FALSE,
      parent INT,
      user_id INT NOT NULL,
      created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
      updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
      PRIMARY KEY(id),
      CONSTRAINT fk_user
        FOREIGN KEY (user_id)
          REFERENCES users(id)
          ON DELETE CASCADE
    )`;
    console.log("---START user query running---");
    await client.query(queryUser);
    console.log("---END user query running---");
    console.log("---START notes query running---");
    await client.query(queryNotebooks);
    console.log("---END user query running---");
    await client.query(`COMMIT`);
    console.log("---COMMITTED---");
  } catch (err) {
    console.log("---ROLLBACK STARTED---");
    await client.query(`ROLLBACK`);
    console.log("---ROLLBACK END---");
    throw err;
  } finally {
    client.release();
  }
}

migrate();
